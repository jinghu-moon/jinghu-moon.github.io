<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>快速在页脚使用一言、今日诗词</title>
    <link href="/posts/b7a3bf10/"/>
    <url>/posts/b7a3bf10/</url>
    
    <content type="html"><![CDATA[<h2 id="1-1-一言"><a href="#1-1-一言" class="headerlink" title="1.1 一言"></a>1.1 一言</h2><p>直接复制代码就行。</p><p>源码来自大佬的主题：<a href="https://github.com/zsbai/hexo-theme-fluid-mod">zsbai/hexo-theme-fluid-mod: Hexo Fluid 主题 UI 修改版</a> 。</p><p>大佬博客：<a href="https://www.julydate.com/">七夏浅笑 (julydate.com)</a></p><ol><li><p>进入路径：Blog\themes\fluid\layout\_partial\plugins，创建 <code>hitokoto.ejs</code> 文件。内部代码如下：</p><div class="code-wrapper"><pre><code class="hljs js">&lt;% <span class="hljs-keyword">if</span>(theme.footer.hitokoto) &#123; %&gt;<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><span class="javascript"><span class="xml">  <span class="hljs-comment">/*一言API*/</span></span></span><span class="javascript"><span class="xml">  $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span></span><span class="javascript"><span class="xml">    getHitokoto();</span></span><span class="javascript"><span class="xml">  &#125;);</span></span><span class="javascript"><span class="xml"></span></span><span class="javascript"><span class="xml">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hitokoto</span>(<span class="hljs-params">e</span>) </span>&#123;</span></span><span class="javascript"><span class="xml">    $(<span class="hljs-string">&quot;#hitokoto&quot;</span>).stop().fadeOut(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span></span><span class="javascript"><span class="xml">      $(<span class="hljs-string">&quot;#hitokoto&quot;</span>).html(e.hitokoto);</span></span><span class="javascript"><span class="xml">      <span class="hljs-keyword">var</span> element = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;hitokotoa&#x27;</span>);</span></span><span class="javascript"><span class="xml">      element.href = <span class="hljs-string">&quot;https://hitokoto.cn/?uuid=&quot;</span> + e.uuid;</span></span><span class="javascript"><span class="xml">      $(<span class="hljs-string">&quot;#hitokoto&quot;</span>).stop().fadeIn()</span></span><span class="javascript"><span class="xml">    &#125;)</span></span><span class="javascript"><span class="xml">  &#125;;</span></span><span class="javascript"><span class="xml"></span></span><span class="javascript"><span class="xml">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getHitokoto</span>(<span class="hljs-params"></span>) </span>&#123;</span></span><span class="javascript"><span class="xml">    <span class="hljs-keyword">var</span> e = [<span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;k&quot;</span>];</span></span><span class="javascript"><span class="xml">    <span class="hljs-comment">// 返回句子类型 https://developer.hitokoto.cn/sentence/#%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0</span></span></span><span class="javascript"><span class="xml">    fetch(<span class="hljs-string">&#x27;https://v1.hitokoto.cn/?encode=json&amp;charset=utf-8&amp;c=&#x27;</span> + e[<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * e.length)], &#123;</span></span><span class="javascript"><span class="xml">      <span class="hljs-attr">cache</span>: <span class="hljs-string">&#x27;no-cache&#x27;</span>,</span></span><span class="javascript"><span class="xml">      <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;GET&#x27;</span>,</span></span><span class="javascript"><span class="xml">      <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;cors&#x27;</span></span></span><span class="javascript"><span class="xml">    &#125;).then(</span></span><span class="javascript"><span class="xml">      <span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> response.json()</span></span><span class="javascript"><span class="xml">    ).then(</span></span><span class="javascript"><span class="xml">      <span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;</span></span><span class="javascript"><span class="xml">        hitokoto(data)</span></span><span class="javascript"><span class="xml">        <span class="hljs-built_in">setTimeout</span>(getHitokoto, <span class="hljs-number">8000</span>) <span class="hljs-comment">//再次获取 hitokoto 时间，时间单位是毫秒</span></span></span><span class="javascript"><span class="xml">      &#125;</span></span><span class="javascript"><span class="xml">    ).catch(</span></span><span class="javascript"><span class="xml">      <span class="hljs-built_in">console</span>.error</span></span><span class="javascript"><span class="xml">    )</span></span><span class="javascript"><span class="xml">  &#125;;</span></span><span class="javascript"><span class="xml"></span></span><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>&lt;% &#125; %&gt;</code></pre></div></li><li><p>进入 Blog\themes\fluid\layout\_partial 路径，打开 <code>footer.ejs</code> 文件。添加代码如下：</p><p><strong>注意，不能用代码格式化插件格式化代码。格式化会报错。</strong></p><div class="code-wrapper"><pre><code class="hljs js">&lt;footer <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;text-center mt-5 py-3&quot;</span>&gt;  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer-content&quot;</span>&gt;</span></span><span class="xml">    &lt;%- theme.footer.content %&gt;</span><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>  &lt;%- partial(<span class="hljs-string">&#x27;_partial/statistics.ejs&#x27;</span>) %&gt;  &lt;%- partial(<span class="hljs-string">&#x27;_partial/beian.ejs&#x27;</span>) %&gt;  &lt;% <span class="hljs-keyword">if</span>(theme.web_analytics.cnzz) &#123; %&gt;    &lt;!-- cnzz Analytics Icon --&gt;    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;cnzz_stat_icon_&lt;%= theme.web_analytics.cnzz %&gt;&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: none&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>  &lt;% &#125; %&gt;    &lt;!-- 添加的代码 一言 --&gt;&lt;!-- ========================================================================== --&gt;&lt;% <span class="hljs-keyword">if</span>(theme.footer.hitokoto) &#123; %&gt;  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer-hitokoto&quot;</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;hitokotoa&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;#&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;_blank&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;nofollow noopener noreferrer&quot;</span>&gt;</span></span><span class="xml">      <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;hitokoto&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><span class="xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;% &#125; %&gt;&lt;!-- ========================================================================== --&gt;    &lt;/footer&gt;</code></pre></div></li><li><p>进入 Blog\themes\fluid\layout\_partial 路径，打开 <code>script.ejs</code> 文件。添加代码如下：</p><div class="code-wrapper"><pre><code class="hljs js">&lt;%- partial(<span class="hljs-string">&#x27;_partial/plugins/nprogress.ejs&#x27;</span>) %&gt;&lt;%- js_ex(theme.static_prefix.jquery, <span class="hljs-string">&#x27;jquery.min.js&#x27;</span>) %&gt;&lt;%- js_ex(theme.static_prefix.bootstrap, <span class="hljs-string">&#x27;js/bootstrap.min.js&#x27;</span>) %&gt;&lt;%- js_ex(theme.static_prefix.internal_js, <span class="hljs-string">&#x27;events.js&#x27;</span>) %&gt;&lt;%- js_ex(theme.static_prefix.internal_js, <span class="hljs-string">&#x27;plugins.js&#x27;</span>) %&gt;&lt;%- partial(<span class="hljs-string">&#x27;_partial/plugins/hitokoto.ejs&#x27;</span>) %&gt;&lt;!-- 添加的代码，只能放在这。放在第一行的下面，会失效。 --&gt;&lt;!-- Plugins --&gt;</code></pre></div></li><li><p>打开 <code>_config.fluid.yml</code> 文件，添加如下代码：</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-comment">#---------------------------</span><span class="hljs-comment"># 页脚</span><span class="hljs-comment"># Footer</span><span class="hljs-comment">#---------------------------</span><span class="hljs-attr">footer:</span>  <span class="hljs-comment"># 页脚第一行文字的 HTML，建议保留 Fluid 的链接，用于向更多人推广本主题</span>  <span class="hljs-comment"># HTML of the first line of the footer, it is recommended to keep the Fluid link to promote this theme to more people</span>  <span class="hljs-attr">content:</span> <span class="hljs-string">&#x27;</span><span class="hljs-string">    &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Hexo&lt;/span&gt;&lt;/a&gt;</span><span class="hljs-string">    &lt;i class=&quot;iconfont icon-love&quot;&gt;&lt;/i&gt;</span><span class="hljs-string">    &lt;a href=&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Fluid&lt;/span&gt;&lt;/a&gt;</span><span class="hljs-string">  &#x27;</span>  <span class="hljs-attr">hitokoto:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 显示一言，关于一言：https://hitokoto.cn/</span></code></pre></div></li><li><p>本地预览，即可看到效果。</p></li></ol><p><font style="color:#ed1c24;font-weight:bolder;">注意</font>：如果你要在页脚使用这串代码。<code>slogan</code> 处不能使用开启 <code>hitokoto</code> 。开启会使<code>slogan</code> 处的「一言」失效。如下：</p><p><img src="https://gitee.com/jinghu-moon/imgbed/raw/master/images/%E5%8A%A8%E7%94%BB5.gif"></p><h2 id="1-2-今日诗词"><a href="#1-2-今日诗词" class="headerlink" title="1.2 今日诗词"></a>1.2 今日诗词</h2><p>在 Blog\themes\fluid\layout\_partial 路径，打开 <code>footer.ejs</code> ，修改如下：</p><div class="code-wrapper"><pre><code class="hljs js">&lt;footer <span class="hljs-class"><span class="hljs-keyword">class</span></span>=<span class="hljs-string">&quot;text-center mt-5 py-3&quot;</span>&gt;  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer-content&quot;</span>&gt;</span></span><span class="xml">    &lt;%- theme.footer.content %&gt;</span><span class="xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>  &lt;%- partial(<span class="hljs-string">&#x27;_partial/statistics.ejs&#x27;</span>) %&gt;  &lt;%- partial(<span class="hljs-string">&#x27;_partial/beian.ejs&#x27;</span>) %&gt;  &lt;% <span class="hljs-keyword">if</span>(theme.web_analytics.cnzz) &#123; %&gt;    &lt;!-- cnzz Analytics Icon --&gt;    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;cnzz_stat_icon_&lt;%= theme.web_analytics.cnzz %&gt;&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: none&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span>  &lt;% &#125; %&gt;&lt;!-- 添加的代码<span class="hljs-number">1</span> 今日诗词，只有句子 --&gt;&lt;!-- ============================================================================== --&gt;  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;jinrishici-sentence&quot;</span>&gt;</span>正在加载今日诗词....<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>&lt;!-- ============================================================================== --&gt;&lt;!-- 添加的代码<span class="hljs-number">2</span> 今日诗词，句子+作者 --&gt;&lt;!-- 使用代码<span class="hljs-number">2</span>，文字会有点大，需要调整下 --&gt;&lt;!-- ============================================================================== --&gt;  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;poem_sentence&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span>  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;poem_info&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></span>  <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><span class="javascript"><span class="xml">    jinrishici.load(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">result</span>) </span>&#123;</span></span><span class="javascript"><span class="xml">      <span class="hljs-keyword">var</span> sentence = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.poem_sentence&quot;</span>)</span></span><span class="javascript"><span class="xml">      <span class="hljs-keyword">var</span> info = <span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;.poem_info&quot;</span>)</span></span><span class="javascript"><span class="xml">      sentence.innerHTML = result.data.content</span></span><span class="javascript"><span class="xml">      info.innerHTML = <span class="hljs-string">&#x27;— &#x27;</span> + result.data.origin.author</span></span><span class="javascript"><span class="xml">    &#125;);</span></span><span class="javascript"><span class="xml"></span></span><span class="javascript"><span class="xml">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>    &lt;/footer&gt;</code></pre></div><p><font style="color:#ed1c24;font-weight:bolder;">注意</font>：如果你要在页脚使用<strong>代码1</strong>。<code>slogan</code> 处不能使用开启 <code>jinrishici</code> 。开启会使 <code>slogan</code> 处的「今日诗词」失效。只有页脚的「今日诗词」会显示。</p><p>本地预览，即可看到效果。</p><blockquote><p>如果你想在 slogan 处和页脚都显示句子的话，建议 slogan 处使用 <code>jinrishici</code> ，页脚使用 <code>hitokoto</code> 。</p></blockquote><h2 id="1-3-参考"><a href="#1-3-参考" class="headerlink" title="1.3 参考"></a>1.3 参考</h2><ul><li><a href="https://guanqr.com/tech/website/add-jinrishici-in-meme/">https://guanqr.com/tech/website/add-jinrishici-in-meme/</a></li><li><a href="https://developer.hitokoto.cn/">一言开发者中心</a> </li><li><a href="https://www.jinrishici.com/doc/">今日诗词开放接口</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Blog Build</category>
      
      <category>主题美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>一言</tag>
      
      <tag>今日诗词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在首页 Slogan 处添加一言 / 今日诗词</title>
    <link href="/posts/b6234a86/"/>
    <url>/posts/b6234a86/</url>
    
    <content type="html"><![CDATA[<p>先声明下，我是前端小白，目前才学到 HTML、CSS。所以下面的 JS 代码，我会依照我的理解来解释。如果有错误，请在评论区指出。非常感谢！</p><p><strong>本文的代码可以实现在首页 <code>slogan</code> 播放一言 / 今日诗词 / 自定义内容。</strong></p><p>参考文章的代码，亲测无法实现。但非常感谢他们的文章，没有他们的文章，我肯定写不出来。我也只是做了简单修改而已。</p><h2 id="1-1-一言、今日诗词"><a href="#1-1-一言、今日诗词" class="headerlink" title="1.1 一言、今日诗词"></a>1.1 一言、今日诗词</h2><p>1、一言</p><p>官网：<a href="https://hitokoto.cn/">https://hitokoto.cn/</a> 、一言开发者中心：<a href="https://developer.hitokoto.cn/">https://developer.hitokoto.cn/</a> 。</p><p>一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。 或是感动，或是开心，有或是单纯的回忆。（官网）</p><p>2、今日诗词</p><p>官网：<a href="https://www.jinrishici.com/">https://www.jinrishici.com/</a> 、开发文档：<a href="https://www.jinrishici.com/doc/">https://www.jinrishici.com/doc/</a></p><p>今日诗词 API 是一个可以返回一句古诗词名句的接口。它可以通过图片和 JSON 格式调用。今日诗词 API 根据不同地点、时间、节日、季节、天气、景观、城市进行智能推荐。</p><p>下面开始讲解首页 Slogan 上如何显示一言 / 今日诗词。</p><h2 id="1-2-typed-ejs"><a href="#1-2-typed-ejs" class="headerlink" title="1.2 typed.ejs"></a>1.2 typed.ejs</h2><p>进入路径：Blog\themes\fluid\layout\_partial\plugins。打开 <code>typed.ejs</code> 文件。复制下面的代码覆盖掉 <code>typed.ejs</code> 文件原有的代码。</p><p><strong>注意，不能用代码格式化插件格式化代码。格式化会报错。</strong></p><div class="code-wrapper"><pre><code class="hljs js">&lt;% <span class="hljs-keyword">if</span>(theme.fun_features.typing.enable &amp;&amp; page.subtitle !== <span class="hljs-literal">false</span>)&#123; %&gt; &lt;%-js_ex(theme.static_prefix.typed, <span class="hljs-string">&quot;/typed.min.js&quot;</span>) %&gt;<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span></span></span><span class="hljs-tag"><span class="xml">  <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span></span></span><span class="hljs-tag"><span class="xml">  <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span></span></span><span class="hljs-tag"><span class="xml">&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span></span><span class="javascript"><span class="xml">  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">typing</span>(<span class="hljs-params">id, title</span>)</span>&#123;</span></span><span class="javascript"><span class="xml">      <span class="hljs-keyword">var</span> typed = <span class="hljs-keyword">new</span> Typed(<span class="hljs-string">&#x27;#&#x27;</span> + id, &#123;</span></span><span class="javascript"><span class="xml">          <span class="hljs-attr">strings</span>: [</span></span><span class="javascript"><span class="xml">            <span class="hljs-string">&#x27;  &#x27;</span>,</span></span><span class="javascript"><span class="xml">            title + <span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,</span></span><span class="javascript"><span class="xml">          ],</span></span><span class="javascript"><span class="xml">          <span class="hljs-attr">cursorChar</span>: <span class="hljs-string">&quot;&lt;%- theme.fun_features.typing.cursorChar %&gt;&quot;</span>,</span></span><span class="javascript"><span class="xml">          <span class="hljs-attr">typeSpeed</span>: &lt;%- theme.fun_features.typing.typeSpeed %&gt;,</span></span><span class="javascript"><span class="xml">          loop: &lt;%- theme.fun_features.typing.loop %&gt;,</span></span><span class="javascript"><span class="xml">      &#125;);</span></span><span class="javascript"><span class="xml">      typed.stop();</span></span><span class="javascript"><span class="xml">      $(<span class="hljs-built_in">document</span>).ready(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span></span><span class="javascript"><span class="xml">          $(<span class="hljs-string">&quot;.typed-cursor&quot;</span>).addClass(<span class="hljs-string">&quot;h2&quot;</span>);</span></span><span class="javascript"><span class="xml">          typed.start();</span></span><span class="javascript"><span class="xml">      &#125;);</span></span><span class="javascript"><span class="xml">  &#125;</span></span><span class="javascript"><span class="xml"></span></span><span class="javascript"><span class="xml">  &lt;% <span class="hljs-keyword">if</span>(is_post()) &#123; %&gt;</span></span><span class="javascript"><span class="xml">      typing(<span class="hljs-string">&quot;subtitle&quot;</span>, <span class="hljs-string">&quot;&lt;%- page.title %&gt;&quot;</span>)  <span class="hljs-comment">// 打印文章标题</span></span></span><span class="javascript"><span class="xml">  &lt;% &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(theme.index.slogan.hitokoto &amp;&amp; !page.layout) &#123; %&gt;</span></span><span class="javascript"><span class="xml">      fetch(<span class="hljs-string">&#x27;https://v1.hitokoto.cn?c=d&amp;c=ch&amp;c=i&#x27;</span>)</span></span><span class="javascript"><span class="xml">      .then(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> response.json())</span></span><span class="javascript"><span class="xml">      .then(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;</span></span><span class="javascript"><span class="xml">        typing(<span class="hljs-string">&quot;hitokoto&quot;</span>, data.hitokoto + <span class="hljs-string">&#x27;&lt;br/&gt; &lt;h6&gt;&#x27;</span> + <span class="hljs-string">&#x27;——&#x27;</span> + data.from_who +<span class="hljs-string">&#x27;「&#x27;</span> + data.from + <span class="hljs-string">&#x27;」&#x27;</span>+ <span class="hljs-string">&#x27;&lt;/h6&gt;&#x27;</span>)</span></span><span class="javascript"><span class="xml">      &#125;)</span></span><span class="javascript"><span class="xml">      .catch(<span class="hljs-built_in">console</span>.error)</span></span><span class="javascript"><span class="xml">  &lt;% &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(theme.index.slogan.jinrishici &amp;&amp; !page.layout) &#123; %&gt;</span></span><span class="javascript"><span class="xml">      jinrishici.load(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">result</span>) </span>&#123;</span></span><span class="javascript"><span class="xml">          typing(<span class="hljs-string">&quot;jinrishici&quot;</span>, result.data.content + <span class="hljs-string">&#x27;&lt;br/&gt; &lt;h6&gt;&#x27;</span> + <span class="hljs-string">&#x27;——&#x27;</span> + <span class="hljs-string">&#x27;【&#x27;</span> + result.data.origin.dynasty + <span class="hljs-string">&#x27;】&#x27;</span> + result.data.origin.author + <span class="hljs-string">&#x27;《&#x27;</span> + result.data.origin.title + <span class="hljs-string">&#x27;》&#x27;</span>+ <span class="hljs-string">&#x27;&lt;/h6&gt;&#x27;</span>)</span></span><span class="javascript"><span class="xml">      &#125;);</span></span><span class="javascript"><span class="xml">  &lt;% &#125; <span class="hljs-keyword">else</span>&#123; %&gt;</span></span><span class="javascript"><span class="xml">      typing(<span class="hljs-string">&quot;subtitle&quot;</span>, <span class="hljs-string">&quot;&lt;%- page.subtitle %&gt;&quot;</span>)  <span class="hljs-comment">// 打印首页一言、今日诗词</span></span></span><span class="javascript"><span class="xml">  &lt;% &#125; %&gt;</span></span><span class="javascript"><span class="xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>&lt;% &#125; %&gt;&lt;!-- 注意，不能用代码格式化插件格式化代码 --&gt;&lt;!-- typing(<span class="hljs-string">&quot;hitokoto&quot;</span>, data.hitokoto + <span class="hljs-string">&#x27;&lt;br /&gt; &lt;h5&gt;&#x27;</span> + <span class="hljs-string">&#x27;——&#x27;</span> + data.from + <span class="hljs-string">&#x27;&lt;/h5&gt;&#x27;</span>)typing(<span class="hljs-string">&quot;hitokoto&quot;</span>, <span class="hljs-string">&#x27;『&#x27;</span> + data.hitokoto + <span class="hljs-string">&#x27;』&#x27;</span> + <span class="hljs-string">&#x27;&lt;br /&gt; &lt;h5&gt;&#x27;</span>+ <span class="hljs-string">&#x27;——&#x27;</span> + <span class="hljs-string">&#x27;「&#x27;</span> + data.from + <span class="hljs-string">&#x27;」&#x27;</span> + <span class="hljs-string">&#x27;&lt;/h5&gt;&#x27;</span>) --&gt;</code></pre></div><ul><li><p>将原来的功能放在 <code>typing</code> 函数里面，再判断打字机显示 subtitle / hitokoto / jinrishici。</p></li><li><p>所有的 post 都显示 subtitle，即文章页的文章 title ，所有的 page 的 subtitle 是网站页面的标题。（除开文章页面）</p></li><li><p><strong>代码实现逻辑</strong></p><ul><li>首先 <code>if</code> 判断，是否为 <code>post</code> ，如果是，则在文章页面打印文章标题。必须是 <code>page.title</code> (文章标题)。</li><li>如果不是，进行第一个 <code>else if</code> 判断。为真，则打印一言。此时需要排除主页以外的页面(分类、标签、关于等页面)，则在判断语句中用 <code>!page.layout</code> 排除非首页页面。</li><li>第一个 <code>else if</code> 判断为假，进行第二个 <code>else if</code> 判断。为真，则打印今日诗词。同样需要在判断语句中用 <code>!page.layout</code> 排除非首页页面。</li><li>第二个 <code>else if</code> 判断为假，进行 <code>else</code> 判断，打印 <code>config.yml</code> 文件中 <code>slogan.text</code> 的内容。</li></ul></li><li><p>今日诗词</p><ul><li>需要使用官方给的 <strong>JS-SDK</strong>（见第3行）</li><li>使用加载函数 <code>jinrishici.load</code> 并传入回调函数，每调用一次，会传入一个新的诗词。</li><li><code>typing(&quot;jinrishici&quot;, result.data.content )</code>会显示<code>null</code></li><li>接口返回结果格式 <code>result</code> 里还有别的类型，详细见<a href="https://www.jinrishici.com/doc/#return">官方文档</a></li></ul></li></ul><h2 id="1-3-layout-ejs"><a href="#1-3-layout-ejs" class="headerlink" title="1.3 layout.ejs"></a>1.3 layout.ejs</h2><p>进入路径：Blog\themes\fluid\layout。打开 <code>layout.ejs</code> 文件。复制下面的代码覆盖掉 <code>layout.ejs</code> 文件原有的代码。</p><p><strong>注意，不能用代码格式化插件格式化代码。格式化会报错。</strong></p><div class="code-wrapper"><pre><code class="hljs js">&lt;%<span class="hljs-keyword">var</span> subtitle = page.subtitle || page.title<span class="hljs-keyword">var</span> banner_img = page.banner_img || theme.index.banner_img<span class="hljs-keyword">var</span> banner_img_height = page.banner_img_height || theme.index.banner_img_height<span class="hljs-keyword">var</span> banner_mask_alpha = page.banner_mask_alpha || theme.index.banner_mask_alpha<span class="hljs-keyword">var</span> colorSchema = theme.dark_mode &amp;&amp; theme.dark_mode.enable &amp;&amp; theme.dark_mode.default ? theme.dark_mode.default : <span class="hljs-string">&#x27;&#x27;</span>%&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;&lt;%= config.language %&gt;&quot; &lt;%= colorSchema ? `data-default-color-scheme=$&#123;colorSchema&#125;` : &#x27;&#x27; %&gt;&gt;&lt;%- partial(&#x27;_partial/head&#x27;) %&gt;&lt;body&gt;  &lt;header style=&quot;height: &lt;%- banner_img_height %&gt;vh;&quot;&gt;    &lt;%- partial(&#x27;_partial/nav&#x27;) %&gt;    &lt;div class=&quot;banner&quot; id=&quot;banner&quot; &lt;%- theme.banner &amp;&amp; theme.banner.parallax &amp;&amp; &#x27;parallax=true&#x27; %&gt;        style=&quot;background: url(&#x27;&lt;%- url_for(banner_img) %&gt;&#x27;) no-repeat center center;          background-size: cover;&quot;&gt;      &lt;div class=&quot;full-bg-img&quot;&gt;        &lt;div class=&quot;mask flex-center&quot; style=&quot;background-color: rgba(0, 0, 0, &lt;%= parseFloat(banner_mask_alpha) %&gt;)&quot;&gt;          &lt;div class=&quot;page-header text-center fade-in-up&quot;&gt;            &lt;span class=&quot;h2&quot; id=&quot;subtitle&quot; title=&quot;&lt;%= subtitle %&gt;&quot;&gt;              &lt;% if(!theme.fun_features.typing.enable) &#123; %&gt;                &lt;%- subtitle %&gt;              &lt;% &#125; %&gt;            &lt;/span&gt;&lt;!-- 添加的代码 --&gt;&lt;!-- ========================================================================= --&gt;            &lt;% if(!is_post()) &#123; %&gt;              &lt;% if(theme.index.slogan.hitokoto) &#123; %&gt;                  &lt;br&gt;                  &lt;span class=&quot;h2&quot; id=&quot;hitokoto&quot;&gt;                  &lt;% if(theme.fun_features.typing.enable == false) &#123; %&gt;                    &lt;%- hitokoto %&gt;                  &lt;% &#125; %&gt;                  &lt;/span&gt;              &lt;% &#125; else if(theme.index.slogan.jinrishici) &#123; %&gt;                  &lt;br&gt;                  &lt;span class=&quot;h2&quot; id=&quot;jinrishici&quot;&gt;                  &lt;% if(theme.fun_features.typing.enable == false) &#123; %&gt;                    &lt;%- jinrishici %&gt;                  &lt;% &#125; %&gt;                  &lt;/span&gt;              &lt;% &#125; %&gt;          &lt;% &#125; %&gt;&lt;!-- ========================================================================= --&gt;            &lt;% if(is_post() &amp;&amp; page.meta !== false) &#123; %&gt;              &lt;%- partial(&#x27;_partial/post-meta&#x27;) %&gt;            &lt;% &#125; %&gt;          &lt;/div&gt;          &lt;% if (theme.scroll_down_arrow.enable &amp;&amp; theme.scroll_down_arrow.banner_height_limit &lt;= banner_img_height &amp;&amp; page.layout !== &#x27;404&#x27;) &#123; %&gt;            &lt;div class=&quot;scroll-down-bar&quot;&gt;              &lt;i class=&quot;iconfont icon-arrowdown&quot;&gt;&lt;/i&gt;            &lt;/div&gt;          &lt;% &#125; %&gt;        &lt;/div&gt;      &lt;/div&gt;    &lt;/div&gt;  &lt;/header&gt;  &lt;main&gt;    &lt;% if(is_post() || page.layout === &#x27;404&#x27;) &#123; %&gt;      &lt;%- body %&gt;    &lt;% &#125; else &#123; %&gt;      &lt;div class=&quot;container nopadding-x-md&quot;&gt;        &lt;div class=&quot;py-5&quot; id=&quot;board&quot;          &lt;%- banner_img_height &gt;= 100 &amp;&amp; theme.banner &amp;&amp; theme.banner.parallax ? &#x27;style=margin-top:0&#x27; : &#x27;&#x27; %&gt;&gt;          &lt;% if(page.layout === &#x27;about&#x27;) &#123; %&gt;            &lt;div class=&quot;about-avatar&quot;&gt;              &lt;img src=&quot;&lt;%= url_for(theme.about.avatar) %&gt;&quot;                  class=&quot;img-fluid&quot; alt=&quot;avatar&quot;&gt;            &lt;/div&gt;          &lt;% &#125; %&gt;          &lt;div class=&quot;container&quot;&gt;            &lt;div class=&quot;row&quot;&gt;              &lt;div class=&quot;col-12 col-md-10 m-auto&quot;&gt;                &lt;%- body %&gt;              &lt;/div&gt;            &lt;/div&gt;          &lt;/div&gt;        &lt;/div&gt;      &lt;/div&gt;    &lt;% &#125; %&gt;    &lt;% if (theme.scroll_top_arrow.enable) &#123; %&gt;      &lt;a id=&quot;scroll-top-button&quot; aria-label=&quot;TOP&quot; href=&quot;#&quot; role=&quot;button&quot;&gt;        &lt;i class=&quot;iconfont icon-arrowup&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;      &lt;/a&gt;    &lt;% &#125; %&gt;    &lt;% if (theme.search.enable) &#123; %&gt;      &lt;%- partial(&#x27;_partial/search&#x27;) %&gt;    &lt;% &#125; %&gt;    &lt;% if (theme.custom_html) &#123; %&gt;      &lt;div class=&quot;col-lg-7 mx-auto nopadding-x-md&quot;&gt;        &lt;div class=&quot;container custom mx-auto&quot;&gt;          &lt;%- theme.custom_html %&gt;        &lt;/div&gt;      &lt;/div&gt;    &lt;% &#125; %&gt;  &lt;/main&gt;  &lt;%- partial(&#x27;_partial/footer&#x27;, &#123; params: &#123; subtitle: subtitle &#125; &#125;) %&gt;  &lt;!-- SCRIPTS --&gt;  &lt;%- partial(&#x27;_partial/scripts&#x27;) %&gt;&lt;/body&gt;&lt;/html&gt;&lt;!-- 注意，不能用代码格式化插件格式化代码 --&gt;</code></pre></div><p>这里添加的代码设置显示一言 / 今日诗词的样式和位置。</p><p><code>&lt;br&gt;</code>：断开内容与出处。</p><h2 id="1-4-config-fluid-yml"><a href="#1-4-config-fluid-yml" class="headerlink" title="1.4 _config.fluid.yml"></a>1.4 _config.fluid.yml</h2><p>打开 <code>_config.fluid.yml</code> 文件。配置如下：</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">slogan:</span>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>    <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span>    <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span>    <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;仰天长啸出门去，我辈岂是蓬蒿人&quot;</span>    <span class="hljs-attr">hitokoto:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 首页显示一言</span>    <span class="hljs-attr">jinrishici:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 首页显示今日诗词</span><span class="hljs-comment"># 等号括住的代码可删可不删</span><span class="hljs-comment"># ===================================================================</span>    <span class="hljs-comment"># 通过 API 接口作为首页副标题的内容，必须返回的是 JSON 格式，如果请求失败则按 text 字段显示，该功能必须先开启 typing 打字机功能</span>    <span class="hljs-comment"># Subtitle of the homepage through the API, must be returned a JSON. If the request fails, it will be displayed in `text` value. This feature must first enable the typing animation</span>    <span class="hljs-attr">api:</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span>      <span class="hljs-comment"># 请求地址</span>      <span class="hljs-comment"># Request url</span>      <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;&quot;</span>      <span class="hljs-comment"># 请求方法</span>      <span class="hljs-comment"># Request method</span>      <span class="hljs-comment"># Available: GET | POST | PUT</span>      <span class="hljs-attr">method:</span> <span class="hljs-string">&quot;GET&quot;</span>      <span class="hljs-comment"># 请求头</span>      <span class="hljs-comment"># Request headers</span>      <span class="hljs-attr">headers:</span> &#123;&#125;      <span class="hljs-comment"># 从请求结果获取字符串的取值字段，最终必须是一个字符串，例如返回结果为 &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, 则取值字段为 [&#x27;data&#x27;, &#x27;content&#x27;]；如果返回是列表则自动选择第一项</span>      <span class="hljs-comment"># The value field of the string obtained from the response. For example, the response content is &#123;&quot;data&quot;: &#123;&quot;author&quot;: &quot;fluid&quot;, &quot;content&quot;: &quot;An elegant theme&quot;&#125;&#125;, the expected `keys: [&#x27;data&#x27;,&#x27;content&#x27;]`; if the return is a list, the first item is automatically selected</span>      <span class="hljs-attr">keys:</span> []<span class="hljs-comment"># ===================================================================</span></code></pre></div><p><code>hitokoto / jinrishici</code> 中任意值为 <code>true</code> ，则显示对应的语句。两者都为 <code>false</code> ，则显示 <code>text</code> 的内容。两者都为 <code>true</code> ，则显示 <code>hitokoto</code> 的内容。</p><h2 id="1-5-修改样式"><a href="#1-5-修改样式" class="headerlink" title="1.5 修改样式"></a>1.5 修改样式</h2><p>新建 <code>ui.css </code>样式文件。引入主题配置。</p><p>引入方式：<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">配置指南 | Hexo Fluid (fluid-dev.com)</a> ，注意：引入的 CSS、JS、HTML 文件方式最好放在 Blog\source\ 路径，不要放在主题的 <code>source</code> 目录下。</p><p>添加以下代码：</p><div class="code-wrapper"><pre><code class="hljs css"><span class="hljs-comment">/* 主页打字机 */</span><span class="hljs-selector-class">.h6</span>,<span class="hljs-selector-tag">h6</span> &#123;    <span class="hljs-attribute">display</span>: inline-block;    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">10px</span>;    <span class="hljs-attribute">text-align</span>: right <span class="hljs-meta">!important</span>;&#125;</code></pre></div><p>![01 样式引入](<a href="https://gitee.com/jinghu-moon/imgbed/raw/master/images/01">https://gitee.com/jinghu-moon/imgbed/raw/master/images/01</a> 样式引入.png)</p><h2 id="1-6-参考"><a href="#1-6-参考" class="headerlink" title="1.6 参考"></a>1.6 参考</h2><ul><li><a href="https://pxxyyz.com/posts/30454/#typed.ejs">Typing+hitokoto+jinrishici - 卤蛋的自我修养 (pxxyyz.com)</a></li><li><a href="https://www.yousazoe.top/archives/e5b4d2d6.html">Hexo-Fluid 博客建站记录 | Fl0w3r (yousazoe.top)</a></li><li><a href="https://lzy-wi.github.io/2020/09/21/fluid-add-hitokoto/">fluid主题博客主页添加一言(hitokoto)手把手教学 - Lzywi’Blog (lzy-wi.github.io)</a></li><li><a href="https://developer.hitokoto.cn/">一言开发者中心</a> </li><li><a href="https://www.jinrishici.com/doc/">今日诗词开放接口</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Blog Build</category>
      
      <category>主题美化</category>
      
    </categories>
    
    
    <tags>
      
      <tag>一言</tag>
      
      <tag>今日诗词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>中文技术文档写作规范</title>
    <link href="/posts/9113742/"/>
    <url>/posts/9113742/</url>
    
    <content type="html"><![CDATA[<p>本文链接：<a href="https://github.com/ruanyf/document-style-guide">ruanyf/document-style-guide: 中文技术文档的写作规范 (github.com)</a>。</p><p>为方便阅读，对文章的排版做了修改。内容未做改动。</p><h1 id="第一章-标题"><a href="#第一章-标题" class="headerlink" title="第一章    标题"></a>第一章    标题</h1><h2 id="1-1-层级"><a href="#1-1-层级" class="headerlink" title="1.1 层级"></a>1.1 层级</h2><p>标题分为四级。</p><ul><li>一级标题：文章的标题</li><li>二级标题：文章主要部分的大标题</li><li>三级标题：二级标题下面一级的小标题</li><li>四级标题：三级标题下面某一方面的小标题</li></ul><p>下面是示例。</p><div class="code-wrapper"><pre><code class="hljs markdown"><span class="hljs-section"># 一级标题</span><span class="hljs-section">## 二级标题</span><span class="hljs-section">### 三级标题</span><span class="hljs-section">#### 四级标题</span></code></pre></div><h2 id="1-2-原则"><a href="#1-2-原则" class="headerlink" title="1.2 原则"></a>1.2 原则</h2><p>（1）一级标题下，不能直接出现三级标题。</p><p>示例：下面的文章结构，缺少二级标题。</p><div class="code-wrapper"><pre><code class="hljs markdown"><span class="hljs-section"># 一级标题</span><span class="hljs-section">### 三级标题</span></code></pre></div><p>（2）标题要避免孤立编号（即同级标题只有一个）。</p><p>示例：下面的文章结构，<code>二级标题 A</code>只包含一个三级标题，完全可以省略<code>三级标题 A</code>。</p><div class="code-wrapper"><pre><code class="hljs markdown"><span class="hljs-section">## 二级标题 A</span><span class="hljs-section">### 三级标题 A</span><span class="hljs-section">## 二级标题 B</span></code></pre></div><p>（3）下级标题不重复上一级标题的名字。</p><p>示例：下面的文章结构，二级标题与下属的三级标题同名，建议避免。</p><div class="code-wrapper"><pre><code class="hljs markdown"><span class="hljs-section">## 概述</span><span class="hljs-section">### 概述</span></code></pre></div><p>（4）谨慎使用四级标题，尽量避免出现，保持层级的简单，防止出现过于复杂的章节。</p><p>如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</p><p>示例：下面的结构二要好于结构一。结构一适用的场景，主要是较长篇幅的内容。</p><div class="code-wrapper"><pre><code class="hljs markdown">结构一<span class="hljs-section">### 三级标题</span><span class="hljs-section">#### 四级标题 A</span><span class="hljs-section">#### 四级标题 B</span><span class="hljs-section">#### 四级标题 C</span>结构二<span class="hljs-section">### 三级标题</span><span class="hljs-strong">**（1）A**</span><span class="hljs-strong">**（2）B**</span><span class="hljs-strong">**（3）C**</span></code></pre></div><h1 id="第二章-文本"><a href="#第二章-文本" class="headerlink" title="第二章    文本"></a>第二章    文本</h1><h2 id="2-1-字间距"><a href="#2-1-字间距" class="headerlink" title="2.1 字间距"></a>2.1 字间距</h2><p>（1）全角中文字符与半角英文字符之间，应有一个半角空格。</p><div class="code-wrapper"><pre><code class="hljs">错误：本文介绍如何快速启动Windows系统。正确：本文介绍如何快速启动 Windows 系统。</code></pre></div><p>（2）全角中文字符与半角阿拉伯数字之间，有没有半角空格都可，但必须保证风格统一，不能两种风格混杂。</p><div class="code-wrapper"><pre><code class="hljs tap">正确：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。正确：2011 年<span class="hljs-number"> 5 </span>月<span class="hljs-number"> 15 </span>日，我订购了<span class="hljs-number"> 5 </span>台笔记本电脑与<span class="hljs-number"> 10 </span>台平板电脑。</code></pre></div><p>半角的百分号，视同阿拉伯数字。</p><div class="code-wrapper"><pre><code class="hljs erlang-repl">正确：今年我国经济增长率是<span class="hljs-number">6.5</span><span class="hljs-comment">%。</span>正确：今年我国经济增长率是 <span class="hljs-number">6.5</span><span class="hljs-comment">%。</span></code></pre></div><p>（3）英文单位若不翻译，单位前的阿拉伯数字与单位符号之间，应留出适当的空隙。</p><div class="code-wrapper"><pre><code class="hljs nix">例<span class="hljs-number">1</span>：一部容量为 <span class="hljs-number">16</span> GB 的智能手机例<span class="hljs-number">2</span>：<span class="hljs-number">1</span> <span class="hljs-attr">h</span> = <span class="hljs-number">60</span> <span class="hljs-attr">min</span> = <span class="hljs-number">3</span>,<span class="hljs-number">600</span> s</code></pre></div><p>（4）半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p><div class="code-wrapper"><pre><code class="hljs">错误：他的电脑是 MacBook Air 。正确：他的电脑是 MacBook Air。</code></pre></div><h2 id="2-2-句子"><a href="#2-2-句子" class="headerlink" title="2.2 句子"></a>2.2 句子</h2><p>（1）避免使用长句。</p><p>不包含任何标点符号的单个句子，或者以逗号分隔的句子构件，长度尽量保持在 20 个字以内；20～29 个字的句子，可以接受；30～39 个字的句子，语义必须明确，才能接受；多于 40 个字的句子，任何情况下都不能接受。</p><div class="code-wrapper"><pre><code class="hljs">错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。</code></pre></div><p>逗号分割的长句，总长度不应该超过 100 字或者正文的 3 行。</p><p>（2）尽量使用简单句和并列句，避免使用复合句。</p><div class="code-wrapper"><pre><code class="hljs">并列句：他昨天生病了，没有参加会议。复合句：那个昨天生病的人没有参加会议。</code></pre></div><p>（3）同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p><div class="code-wrapper"><pre><code class="hljs">错误：请确认没有接通装置的电源。正确：请确认装置的电源已关闭。</code></pre></div><p>（4）避免使用双重否定句。</p><div class="code-wrapper"><pre><code class="hljs">错误：没有删除权限的用户，不能删除此文件。正确：用户必须拥有删除权限，才能删除此文件。</code></pre></div><h2 id="2-3-写作风格"><a href="#2-3-写作风格" class="headerlink" title="2.3 写作风格"></a>2.3 写作风格</h2><p>（1）尽量不使用被动语态，改为使用主动语态。</p><div class="code-wrapper"><pre><code class="hljs">错误：假如此软件尚未被安装，正确：假如尚未安装这个软件，</code></pre></div><p>（2）不使用非正式的语言风格。</p><div class="code-wrapper"><pre><code class="hljs">错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！正确：无法参加本次活动，我深感遗憾。</code></pre></div><p>（3）不使用冷僻、生造或者文言文的词语，而要使用现代汉语的常用表达方式。</p><div class="code-wrapper"><pre><code class="hljs">错误：这是唯二的快速启动的方法。正确：这是仅有的两种快速启动的方法。</code></pre></div><p>（4）用对“的”、“地”、“得”。</p><div class="code-wrapper"><pre><code class="hljs">她露出了开心的笑容。（形容词＋的＋名词）她开心地笑了。（副词＋地＋动词）她笑得很开心。（动词＋得＋副词）</code></pre></div><p>（5）使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p><div class="code-wrapper"><pre><code class="hljs">错误：从管理系统可以监视中继系统和受其直接控制的分配系统。正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。</code></pre></div><p>（6）名词前不要使用过多的形容词。</p><div class="code-wrapper"><pre><code class="hljs">错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。</code></pre></div><h2 id="2-4-英文处理"><a href="#2-4-英文处理" class="headerlink" title="2.4 英文处理"></a>2.4 英文处理</h2><p>（1）英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p><div class="code-wrapper"><pre><code class="hljs ada">英文：⋯information stored <span class="hljs-keyword">in</span> random <span class="hljs-keyword">access</span> memory (RAMs)⋯中文：……存储在随机存取存储器（RAM）里的信息……</code></pre></div><p>（2）外文缩写可以使用半角圆点(<code>.</code>)表示缩写。</p><div class="code-wrapper"><pre><code class="hljs erlang">U.S.A.Apple, Inc.</code></pre></div><p>（3）表示中文时，英文省略号（<code>⋯</code>）应改为中文省略号（<code>……</code>）。</p><div class="code-wrapper"><pre><code class="hljs vim">英文：<span class="hljs-number">5</span> minutes <span class="hljs-keyword">later</span>⋯中文：<span class="hljs-number">5</span> 分钟过去了……</code></pre></div><p>（4）英文书名或电影名改用中文表达时，双引号应改为书名号。</p><div class="code-wrapper"><pre><code class="hljs stata">英文：<span class="hljs-keyword">He</span> published <span class="hljs-keyword">an</span> article entitled <span class="hljs-string">&quot;The Future of the Aviation&quot;</span>.中文：他发表了一篇名为《航空业的未来》的文章。</code></pre></div><p>（5）第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p><div class="code-wrapper"><pre><code class="hljs">IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。</code></pre></div><p>（6）专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p><div class="code-wrapper"><pre><code class="hljs applescript">“American Association <span class="hljs-keyword">of</span> Physicists <span class="hljs-keyword">in</span> Medicine”（美国医学物理学家协会）是专有名词，需要大写。“online <span class="hljs-keyword">transaction</span> processing”（在线事务处理）不是专有名词，不应大写。</code></pre></div><h1 id="第三章-段落"><a href="#第三章-段落" class="headerlink" title="第三章    段落"></a>第三章    段落</h1><h2 id="3-1-原则"><a href="#3-1-原则" class="headerlink" title="3.1 原则"></a>3.1 原则</h2><ul><li>一个段落只能有一个主题，或一个中心句子。</li><li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为核心句服务。</li><li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li><li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li><li>段落之间使用一个空行隔开。</li><li>段落开头不要留出空白字符。</li></ul><h2 id="3-2-引用"><a href="#3-2-引用" class="headerlink" title="3.2 引用"></a>3.2 引用</h2><p>引用第三方内容时，应注明出处。</p><div class="code-wrapper"><pre><code class="hljs inform7">One <span class="hljs-keyword">man</span>’s constant <span class="hljs-keyword">is</span> another <span class="hljs-keyword">man</span>’s variable. — Alan Perlis</code></pre></div><p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p><div class="code-wrapper"><pre><code class="hljs">本文转载自 WikiQuote</code></pre></div><p>使用外部图片时，必须在图片下方或文末标明来源。</p><div class="code-wrapper"><pre><code class="hljs">本文部分图片来自 Wikipedia</code></pre></div><h1 id="第四章-数值"><a href="#第四章-数值" class="headerlink" title="第四章    数值"></a>第四章    数值</h1><h2 id="4-1-半角数字"><a href="#4-1-半角数字" class="headerlink" title="4.1 半角数字"></a>4.1 半角数字</h2><p>阿拉伯数字一律使用半角形式，不得使用全角形式。</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">错误：这件商品的价格是１０００元。</span><span class="hljs-string">正确：这件商品的价格是</span> <span class="hljs-number">1000</span> <span class="hljs-string">元。</span></code></pre></div><h2 id="4-2-千分号"><a href="#4-2-千分号" class="headerlink" title="4.2 千分号"></a>4.2 千分号</h2><p>数值为千位以上，应添加千分号（半角逗号）。</p><div class="code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">XXX</span> 公司的实收资本为 ￥<span class="hljs-number">1</span>,<span class="hljs-number">258</span>,<span class="hljs-number">000</span> 人民币。</code></pre></div><p>对于 4 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于 4 位以上的数值，应添加千分号。</p><h2 id="4-3-货币"><a href="#4-3-货币" class="headerlink" title="4.3 货币"></a>4.3 货币</h2><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p><div class="code-wrapper"><pre><code class="hljs gams"><span class="hljs-meta"><span class="hljs-meta-keyword">$1</span>,000</span><span class="hljs-number">1</span>,<span class="hljs-number">000</span> 美元</code></pre></div><p>英文的货币名称，建议参考国际标准 <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a>。</p><h2 id="4-4-数值范围"><a href="#4-4-数值范围" class="headerlink" title="4.4 数值范围"></a>4.4 数值范围</h2><p>表示数值范围时，用波浪线（<code>～</code>）或一字线（<code>—</code>）连接。参见《标点符号》一节的“连接号”部分。</p><p>带有单位或百分号时，两个数字建议都要加上单位或百分号。</p><div class="code-wrapper"><pre><code class="hljs basic"><span class="hljs-symbol">132 </span>kg～<span class="hljs-number">234</span> kg<span class="hljs-number">67</span>%～<span class="hljs-number">89</span>%</code></pre></div><h2 id="4-5-变化程度的表示法"><a href="#4-5-变化程度的表示法" class="headerlink" title="4.5 变化程度的表示法"></a>4.5 变化程度的表示法</h2><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p><div class="code-wrapper"><pre><code class="hljs">增加到过去的两倍（过去为一，现在为二）增加了两倍（过去为一，现在为三）</code></pre></div><p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p><div class="code-wrapper"><pre><code class="hljs">降低到百分之八十（定额是一百，现在是八十）降低了百分之八十（原来是一百，现在是二十）</code></pre></div><p>不能用“降低 N 倍”或“减少 N 倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p><h1 id="第五章-标点符号"><a href="#第五章-标点符号" class="headerlink" title="第五章    标点符号"></a>第五章    标点符号</h1><h2 id="5-1-原则"><a href="#5-1-原则" class="headerlink" title="5.1 原则"></a>5.1 原则</h2><p>（1）中文语句的标点符号，均应该采取全角符号，这样可以与全角文字保持视觉的一致。</p><p>（2）如果整句为英文，则该句使用英文/半角标点。</p><p>（3）句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</p><p>（4）点号（句号、逗号、顿号、分号、冒号）不得出现在标题的末尾，而标号（引号、括号、破折号、省略号、书名号、着重号、间隔号、叹号、问号）可以。</p><h2 id="5-2-句号"><a href="#5-2-句号" class="headerlink" title="5.2 句号"></a>5.2 句号</h2><p>（1）中文语句的结尾处应该用全角句号（<code>。</code>）。</p><p>（2）句子末尾用括号加注时，句号应在括号之外。</p><div class="code-wrapper"><pre><code class="hljs tap">错误：关于文件的输出，请参照第 1.3 节（见第<span class="hljs-number"> 26 </span>页。）正确：关于文件的输出，请参照第 1.3 节（见第<span class="hljs-number"> 26 </span>页）。</code></pre></div><h2 id="5-3逗号"><a href="#5-3逗号" class="headerlink" title="5.3逗号"></a>5.3逗号</h2><p>（1）逗号（<code>，</code>）表示句子内部的一般性停顿。</p><p>（2）注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p><h2 id="5-4-顿号"><a href="#5-4-顿号" class="headerlink" title="5.4 顿号"></a>5.4 顿号</h2><p>（1）句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p><div class="code-wrapper"><pre><code class="hljs">错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。</code></pre></div><p>（2）英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p><div class="code-wrapper"><pre><code class="hljs armasm">例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook <span class="hljs-keyword">and</span> other components.</code></pre></div><p>（3）中文句子内部的并列词，最后一个尽量使用（<code>和</code>）来连接，使句子读起来更加连贯，下面两个句子都可以，第二个更优。</p><div class="code-wrapper"><pre><code class="hljs">正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里，以及百度等。正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。</code></pre></div><h2 id="5-5-分号"><a href="#5-5-分号" class="headerlink" title="5.5 分号"></a>5.5 分号</h2><p>（1）分号（<code>；</code>）表示复句内部并列分句之间的停顿。</p><h2 id="5-6-引号"><a href="#5-6-引号" class="headerlink" title="5.6 引号"></a>5.6 引号</h2><p>（1）引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p><div class="code-wrapper"><pre><code class="hljs">例句：许多人都认为客户服务的核心是“友好”和“专业”。</code></pre></div><p>（2）引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p><div class="code-wrapper"><pre><code class="hljs">例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”</code></pre></div><h2 id="5-7-括号"><a href="#5-7-括号" class="headerlink" title="5.7 括号"></a>5.7 括号</h2><p>（1）补充说明时，使用全角圆括号（<code>（）</code>），括号前后不加空格。</p><div class="code-wrapper"><pre><code class="hljs">例句：请确认所有的连接（电缆和接插件）均安装牢固。</code></pre></div><p>（2）几种括号的中英文名称。</p><table><thead><tr><th></th><th align="center">英文</th><th align="center">中文</th></tr></thead><tbody><tr><td><code>&#123; &#125;</code></td><td align="center">braces 或 curly brackets</td><td align="center">大括号</td></tr><tr><td><code>[ ]</code></td><td align="center">square brackets 或 brackets</td><td align="center">方括号</td></tr><tr><td><code>&lt; &gt;</code></td><td align="center">angled brackets</td><td align="center">尖括号</td></tr><tr><td><code>( )</code></td><td align="center">parentheses</td><td align="center">圆括号</td></tr></tbody></table><h2 id="5-8-冒号"><a href="#5-8-冒号" class="headerlink" title="5.8 冒号"></a>5.8 冒号</h2><p>（1）全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p><div class="code-wrapper"><pre><code class="hljs">例句：请确认以下几项内容：时间、地点、活动名称和来宾数量。</code></pre></div><p>（2）表示时间时，应使用半角冒号（<code>:</code>）。</p><div class="code-wrapper"><pre><code class="hljs">例句：早上 8:00</code></pre></div><h2 id="5-9-省略号"><a href="#5-9-省略号" class="headerlink" title="5.9 省略号"></a>5.9 省略号</h2><p>（1）省略号（<code>……</code>）表示语句未完、或者语气的不连续。</p><p>（2）省略号占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p><p>（3）省略号不应与“等”这个词一起使用。</p><div class="code-wrapper"><pre><code class="hljs">错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。正确：我们为会餐准备了各色水果，有香蕉、苹果、梨……正确：我们为会餐准备了香蕉、苹果、梨等各色水果。</code></pre></div><h2 id="5-10-感叹号"><a href="#5-10-感叹号" class="headerlink" title="5.10 感叹号"></a>5.10 感叹号</h2><p>（1）应该使用平静的语气叙述，尽量避免使用感叹号（<code>！</code>）。</p><p>（2）不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p><h2 id="5-11-破折号"><a href="#5-11-破折号" class="headerlink" title="5.11 破折号"></a>5.11 破折号</h2><p>（1）破折号<code>————</code>一般用于进一步解释。</p><p>（2）破折号应占两个汉字的位置。如果破折号本身只占一个汉字的位置，那么前后应该留出一个半角空格。</p><div class="code-wrapper"><pre><code class="hljs">例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。例句：直觉 —— 尽管它并不总是可靠的 —— 告诉我，这事可能出了些问题。</code></pre></div><h2 id="5-12-连接号"><a href="#5-12-连接号" class="headerlink" title="5.12 连接号"></a>5.12 连接号</h2><p>（1）连接号用于连接两个类似的词。</p><p>（2）以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p><ul><li>两个名词的复合</li><li>图表编号</li></ul><div class="code-wrapper"><pre><code class="hljs subunit">例句：氧化-还原反应例句：图 1<span class="hljs-string">-1</span></code></pre></div><p>（3）数值范围（例如日期、时间或数字）应该使用波浪连接号（<code>～</code>）或一字号（<code>—</code>），占一个全角字符的位置。</p><div class="code-wrapper"><pre><code class="hljs">例句：2009 年～2011 年</code></pre></div><p>注意，波浪连接号前后两个值都建议加上单位。</p><p>（4）波浪连接号也可以用汉字“至”代替。</p><div class="code-wrapper"><pre><code class="hljs mathematica">例句：周围温度：<span class="hljs-operator">-</span><span class="hljs-number">20</span> °<span class="hljs-built_in">C</span> 至 <span class="hljs-operator">-</span><span class="hljs-number">10</span> °<span class="hljs-built_in">C</span></code></pre></div><h1 id="第六章-文档体系"><a href="#第六章-文档体系" class="headerlink" title="第六章    文档体系"></a>第六章    文档体系</h1><h2 id="6-1-结构"><a href="#6-1-结构" class="headerlink" title="6.1 结构"></a>6.1 结构</h2><p>软件手册是一部完整的书，建议采用下面的结构。</p><ul><li><strong>简介</strong>（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li><li><strong>快速上手</strong>（Getting Started）：[可选] [文件] 如何最快速地使用产品</li><li><strong>入门篇</strong>（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul><li><strong>环境准备</strong>（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li><li><strong>安装</strong>（Installation）：[可选] [文件] 软件的安装方法</li><li><strong>设置</strong>（Configuration）：[必备] [文件] 软件的设置</li></ul></li><li><strong>进阶篇</strong>（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li><li><strong>API</strong>（Reference）：[可选] [目录|文件] 软件 API 的逐一介绍</li><li><strong>FAQ</strong>：[可选] [文件] 常见问题解答</li><li><strong>附录</strong>（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul><li><strong>Glossary</strong>：[可选] [文件] 名词解释</li><li><strong>Recipes</strong>：[可选] [文件] 最佳实践</li><li><strong>Troubleshooting</strong>：[可选] [文件] 故障处理</li><li><strong>ChangeLog</strong>：[可选] [文件] 版本说明</li><li><strong>Feedback</strong>：[可选] [文件] 反馈方式</li></ul></li></ul><p>下面是两个真实范例，可参考。</p><ul><li><a href="https://redux.js.org/introduction/getting-started">Redux 手册</a></li><li><a href="http://flight-manual.atom.io/">Atom 手册</a></li></ul><h2 id="6-2-文件名"><a href="#6-2-文件名" class="headerlink" title="6.2 文件名"></a>6.2 文件名</h2><p>文档的文件名不得含有空格。</p><p>文件名必须使用半角字符，不得使用全角字符。这也意味着，中文不能用于文件名。</p><div class="code-wrapper"><pre><code class="hljs dos">错误：名词解释.<span class="hljs-built_in">md</span>正确：glossary.<span class="hljs-built_in">md</span></code></pre></div><p>文件名建议只使用小写字母，不使用大写字母。</p><div class="code-wrapper"><pre><code class="hljs dos">错误：TroubleShooting.<span class="hljs-built_in">md</span>正确：troubleshooting.<span class="hljs-built_in">md</span></code></pre></div><p>为了醒目，某些说明文件的文件名，可以使用大写字母，比如<code>README</code>、<code>LICENSE</code>。</p><p>文件名包含多个单词时，单词之间建议使用半角的连词线（<code>-</code>）分隔。</p><div class="code-wrapper"><pre><code class="hljs dos">不佳：advanced_usage.<span class="hljs-built_in">md</span>正确：advanced-usage.<span class="hljs-built_in">md</span></code></pre></div><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="http://wenku.baidu.com/view/23cc1a6527d3240c8447efbf.html">产品手册中文写作规范</a>, by 华为</li><li><a href="http://guide.daocloud.io/dcs/%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83%E5%92%8C%E6%A0%BC%E5%BC%8F%E8%A7%84%E8%8C%83-9153803.html">写作规范和格式规范</a>, by DaoCloud</li><li><a href="http://www.hitachi-tc.co.jp/company/thesis/thesis.pdf">技术写作技巧在日汉翻译中的应用</a>, by 刘方</li><li><a href="https://www.lengoo.de/documents/styleguides/lengoo_styleguide_ZH.pdf">简体中文规范指南</a>, by lengoo</li><li><a href="https://open.leancloud.cn/copywriting-style-guide.html">文档风格指南</a>, by LeanCloud</li><li><a href="https://docs.google.com/document/d/1R8lMCPf6zCD5KEA8ekZ5knK77iw9J-vJ6vEopPemqZM/edit">豌豆荚文案风格指南</a>, by 豌豆荚</li><li><a href="https://github.com/sparanoid/chinese-copywriting-guidelines">中文文案排版指北</a>, by sparanoid</li><li><a href="http://w3c.github.io/clreq/">中文排版需求</a>, by W3C</li><li><a href="http://www.ruanyifeng.com/blog/2017/02/filename-should-be-lowercase.html">为什么文件名要小写？</a>, by 阮一峰</li><li><a href="https://developers.google.com/style/">Google Developer Documentation Style Guide</a>, by Google</li><li><a href="http://www.moe.gov.cn/ewebeditor/uploadfile/2015/01/13/20150113091154536.pdf">出版物上数字用法的规定（国家标准GBT15835－2011）</a></li><li><a href="https://zh.wikisource.org/zh-hans/GB_3100-1993_%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8">GB 3100-1993 国际单位制及其应用</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>转载</category>
      
    </categories>
    
    
    <tags>
      
      <tag>写作规范</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + Github 搭建博客2 — 初步搭建</title>
    <link href="/posts/4b3e013f/"/>
    <url>/posts/4b3e013f/</url>
    
    <content type="html"><![CDATA[<p>什么是 Hexo？</p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>更多关于 Hexo 介绍请看官网：<a href="https://hexo.io/zh-cn/">Hexo</a></p><h1 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h1><h2 id="1-1-Node-js-下载"><a href="#1-1-Node-js-下载" class="headerlink" title="1.1 Node.js 下载"></a>1.1 Node.js 下载</h2><p>官网：<a href="https://nodejs.org/zh-cn/">Node.js (Nodejs.org)</a>。如下：</p><p>![1.1 Node.js下载（官网）](C:\Users\khi12\Desktop\初步搭建\1.1 Node.js下载（官网）.png)</p><p>如果官网打不开，备用链接：<a href="http://nodejs.cn/download/">下载 | Node.js 中文网 (Nodejs.cn)</a> ，如下：</p><p>![1.2 Node.js 下载（非官方）](C:\Users\khi12\Desktop\初步搭建\1.2 Node.js 下载（非官方）.png)</p><p>Node.js 是什么，与本教程内容无关，不解释（其实我也不知道 🙃）。如果你想了解 Node.js ，建议阅读官方文档或者看看这个回答：<a href="https://www.zhihu.com/question/33578075"> Node.js是用来做什么的？ - 知乎 (zhihu.com)</a>。</p><h2 id="1-2-Node-js-安装流程"><a href="#1-2-Node-js-安装流程" class="headerlink" title="1.2 Node.js 安装流程"></a>1.2 Node.js 安装流程</h2><p>一路 next 就可以了。安装目录由你决定。</p><blockquote><p>参考教程：<a href="https://www.cnblogs.com/zhouyu2017/p/6485265.html">Node.js安装及环境配置之Windows篇 - 周瑜周 - 博客园 (cnblogs.com)</a></p></blockquote><h2 id="1-3-Git-下载"><a href="#1-3-Git-下载" class="headerlink" title="1.3 Git 下载"></a>1.3 Git 下载</h2><p>下载地址：<a href="https://git-scm.com/download/win">Git - Download for Windows(git-scm.com)</a>，如下：</p><p>![1.3 git 下载（win）](C:\Users\khi12\Desktop\初步搭建\1.3 git 下载（win）.png)</p><p>如果官网打不开，国内镜像网站：<a href="https://npm.taobao.org/mirrors/git-for-windows/">git-for-windows Mirror (taobao.org)</a>。进入网站后，划到最下面，点击最新版本： <code>v2.34.1.windows.1/ </code> ，进入，选择下载 <code>Git-2.34.1-64-bit.exe </code> 。</p><h2 id="1-4-Git-安装流程"><a href="#1-4-Git-安装流程" class="headerlink" title="1.4 Git 安装流程"></a>1.4 Git 安装流程</h2><ol><li>双击运行 <code>Git-2.34.1-64-bit.exe</code> ，进入 git 的安装界面。</li></ol><p>![1.4 git 安装流程1](C:\Users\khi12\Desktop\初步搭建\1.4 git 安装流程1.png)</p><ol start="2"><li>点击 <code>next</code> ，选择安装目录。默认安装在 <code>C:\Program Files\Git</code> 。建议安装在 <code>D</code> 盘。如下：</li></ol><p>![1.5 git 安装流程2](C:\Users\khi12\Desktop\初步搭建\1.5 git 安装流程2.png)</p><ol start="3"><li>点击 <code>next</code> ，选择组件（Select Components）。<br><font style="color:#ed1c24;font-weight:bolder;">红框</font>：默认选项，不要动。<br><font style="color:#22b14c;font-weight:bolder;">绿框1</font>：是否在桌面添加快捷方式。<br><font style="color:#22b14c;font-weight:bolder;">绿框2</font>：是否每天检查 Git 有无 Windows 更新和将Git Bash配置文件添加到Windows终端。这些根据自己需要选择。<br><strong>我的选择</strong>：保持默认就好。</li></ol><p>![1.6 git 安装流程3](C:\Users\khi12\Desktop\初步搭建\1.6 git 安装流程3.png)</p><ol start="4"><li>点击 <code>next</code> ，选择开始菜单文件夹（Select Start Menu Folder），按需选择。</li></ol><p>![1.7 git 安装流程4](C:\Users\khi12\Desktop\初步搭建\1.7 git 安装流程4.png)</p><ol start="5"><li>默认即可。点击 <code>next</code> ，进入下一步。<a href="https://baike.baidu.com/item/Vim/60410?fr=aladdin">Vim（Unix及类Unix系统文本编辑器）_百度百科 (baidu.com)</a>    <a href="https://vimjc.com/">vim教程网 (vimjc.com)</a></li></ol><p>![1.8 git 安装流程5](C:\Users\khi12\Desktop\初步搭建\1.8 git 安装流程5.png)</p><ol start="6"><li>默认就好，当然你也可以自定义分支为 <code>main</code> 。看你可以啦。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.9 git 安装流程6](C:\Users\khi12\Desktop\初步搭建\1.9 git 安装流程6.png)</p><ol start="7"><li>调整PATH环境，默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.10 git 安装流程7](C:\Users\khi12\Desktop\初步搭建\1.10 git 安装流程7.png)</p><ol start="8"><li>选择SSH可执行文件（Choosing the SSH executable），默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.11 git 安装流程8](C:\Users\khi12\Desktop\初步搭建\1.11 git 安装流程8.png)</p><ol start="9"><li>选择 HTTPS 后端传输（Choosing HTTPS transport backend），默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.12 git 安装流程9](C:\Users\khi12\Desktop\初步搭建\1.12 git 安装流程9.png)</p><ol start="10"><li>配置行结束转换（Configuring the line ending conversions），默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.13 git 安装流程10](C:\Users\khi12\Desktop\初步搭建\1.13 git 安装流程10.png)</p><ol start="11"><li>配置终端模拟器与 Git Bash 一起使用（Configuring the terminal emulator to use with Git Bash），默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.14 git 安装流程11](C:\Users\khi12\Desktop\初步搭建\1.14 git 安装流程11.png)</p><ol start="12"><li>选择 Git pull 风格，默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.15 git 安装流程12](C:\Users\khi12\Desktop\初步搭建\1.15 git 安装流程12.png)</p><ol start="13"><li>选择凭据管理（Choose a credential helper），默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.16 git 安装流程13](C:\Users\khi12\Desktop\初步搭建\1.16 git 安装流程13.png)</p><ol start="14"><li>配置额外选项（Configuring extra options），默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.17 git 安装流程14](C:\Users\khi12\Desktop\初步搭建\1.17 git 安装流程14.png)</p><ol start="15"><li>配置实验选项（Configuring experimental options），默认即可。点击 <code>next</code> ，进入下一步。</li></ol><p>![1.18 git 安装流程15](C:\Users\khi12\Desktop\初步搭建\1.18 git 安装流程15.png)</p><ol start="16"><li>安装中，等待。</li></ol><p>![1.19 git 安装流程16](C:\Users\khi12\Desktop\初步搭建\1.19 git 安装流程16.png)</p><ol start="17"><li>去掉勾选，点击 <code>Finish</code> 。安装完成！</li></ol><p>![1.20 git 安装流程17](C:\Users\khi12\Desktop\初步搭建\1.20 git 安装流程17.png)</p><blockquote><p>参考资料：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Windows系统Git安装教程（详解Git安装过程） - 学为所用 - 博客园 (cnblogs.com)</a></p></blockquote><p>现在，在任意文件夹，右键鼠标，就可以看到 <strong>Git GUI 选项</strong>（git图形界面工具）、<strong>Git Bash 选项</strong>（命令行工具），如下：</p><p>![1.21 git 选项](C:\Users\khi12\Desktop\初步搭建\1.21 git 选项.png)</p><p>我们一般使用 <code>Git Bash</code> 命令行工具。</p><h2 id="1-5-Git-Bash-界面美化"><a href="#1-5-Git-Bash-界面美化" class="headerlink" title="1.5 Git Bash 界面美化"></a>1.5 Git Bash 界面美化</h2><p>当我们在任意文件夹，鼠标右键选择 <code>Git Bash Here </code> 时，会弹出以下界面。</p><p>![1.22 git 美化1](C:\Users\khi12\Desktop\初步搭建\1.22 git 美化1.png)</p><p>这个界面很丑，字体太小，配色也丑。所以我们可以美化一下。</p><ol><li>鼠标右键界面的任务栏，点击 <code>opitions</code> ，进入配置界面。</li></ol><p>![1.23 git 美化2](C:\Users\khi12\Desktop\初步搭建\1.23 git 美化2.png)</p><ol start="2"><li>切换语言为：zh_CN 或者 @ Windows 语言 @。保存，再次打开配置界面，已经切换为中文。</li></ol><p>![1.24 git 美化3](C:\Users\khi12\Desktop\初步搭建\1.24 git 美化3.png)</p><ol start="3"><li>外观设置，如下：</li></ol><p>![1.25 git 美化4](C:\Users\khi12\Desktop\初步搭建\1.25 git 美化4.png)</p><ol start="4"><li>文本设置，如下</li></ol><p>![1.26 git 美化5](C:\Users\khi12\Desktop\初步搭建\1.26 git 美化5.png)</p><p>大功告成！现在的 <code>Git Bash Here </code> 如下：</p><p>![1.27 git 美化6](C:\Users\khi12\Desktop\初步搭建\1.27 git 美化6.png)</p><p>是不是好看了许多。😉</p><h2 id="1-6-检查是否安装成功"><a href="#1-6-检查是否安装成功" class="headerlink" title="1.6 检查是否安装成功"></a>1.6 检查是否安装成功</h2><p><code>Win+R</code> ，输入 <code>cmd</code> ，回车，进入以下界面。</p><p>输入 <code>Node -v</code>，回车；输入 <code>npm -v</code> ，回车。如果如下图所示，则代表 <strong>Node.js</strong> 安装成功。</p><p>若报错，复制错误代码，百度。</p><blockquote><p>注意：在 <code>Terminal、cmd、powershell</code> 界面时，复制、粘贴均不能使用 <code>Ctrl+C 和 Ctrl+V </code> 。复制、粘贴使用 <code>Ctrl+Ins 和 Shift+Ins</code> 或者直接右键复制、粘贴。建议使用后者。笔记本电脑的键盘的 <code>Ins</code> 不太好用。</p></blockquote><p>![1.28 检查安装](C:\Users\khi12\Desktop\初步搭建\1.28 检查安装.png)</p><h2 id="1-7-安装-Hexo"><a href="#1-7-安装-Hexo" class="headerlink" title="1.7 安装 Hexo"></a>1.7 安装 Hexo</h2><p>Hexo 是我们以后用于搭建个人博客的框架，所以最好新建一个 <strong>Blog</strong> 文件夹用于博客的管理，同时Hexo 框架与以后写作发布的网页都会保存在这个文件夹当中。</p><p>注：以下内容，我将会用 <code>Blog</code> 文件夹指代博客文件夹。</p><p><strong>1、建立博客文件夹</strong></p><p>我把 <strong>Blog</strong> 文件建立在 E 盘。注意文件名尽量不使用<u>中文、空格</u>。以免引起未知错误。如下：</p><p>![1.29 博客文件夹](C:\Users\khi12\Desktop\初步搭建\1.29 博客文件夹.png)</p><p><strong>2、下载 Hexo</strong></p><p>左键选中 <code>Blog</code> 文件夹，右键点击 <code>Git Bash Here</code> 。进入以下界面：</p><p>![1.30 hexo 安装1](C:\Users\khi12\Desktop\初步搭建\1.30 hexo 安装1.png)</p><p>输入命令，下载 Hexo 。</p><div class="code-wrapper"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> -g hexo</code></pre></div><p>结果如下，则下载成功。</p><p>![1.31 hexo 安装2](C:\Users\khi12\Desktop\初步搭建\1.31 hexo 安装2.png)</p><p><strong>3、Hexo 初始化</strong></p><p>进入 <code>Blog</code> 文件夹，右键点击 <code>Git Bash Here</code> ，此时，<code>Blog</code> 文件夹内部为空。</p><p>输入命令：</p><div class="code-wrapper"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span></code></pre></div><p>结果如下，则初始化成功。</p><p>![1.32 hexo 初始化](C:\Users\khi12\Desktop\初步搭建\1.32 hexo 初始化.png)</p><p><strong>4、构建 Hexo</strong></p><p>输入命令：</p><div class="code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo g</span></code></pre></div><p>再次构建生成文件。会在当前目录下生成一个名为 <code>public</code> 的文件夹，这个文件夹就是根据你 Hexo 的配置，生成的 HTML + CSS + JS 的静态文件。</p><p><strong>5、启动 Hexo 本地服务器</strong></p><p>输入命令：</p><div class="code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span></code></pre></div><p>结果如下，则成功启动本地服务器。</p><p>![1.33 hexo 本地服务](C:\Users\khi12\Desktop\初步搭建\1.33 hexo 本地服务.png)</p><p>浏览器输入框起来的网址： <code>http://localhost:4000/</code> 。如下：</p><p>![1.34 hexo 本地部署](C:\Users\khi12\Desktop\初步搭建\1.34 hexo 本地部署.png)</p><p>当你刷新本地服务器后，你会发现 <code>Git Bash Here</code> 界面如下：</p><p>![1.35 本地部署报错](C:\Users\khi12\Desktop\初步搭建\1.35 本地部署报错.png)</p><p>这些 <font style="color:#ed1c24;font-weight:bolder;">warnings</font> 其实对 Hexo 程序运行没啥影响，只是看起来不舒服罢了。</p><p>如果你想处它们，可以看看这两篇博文：<br><a href="https://www.haoyizebo.com/posts/710984d0/">https://www.haoyizebo.com/posts/710984d0/</a><br><a href="http://gsgundam.com/2021-10-29-hexo-nodejs14-accessing-non-existent-property-issue/">http://gsgundam.com/2021-10-29-hexo-nodejs14-accessing-non-existent-property-issue/</a></p><p><strong>至此，本地部署完成！</strong></p><h1 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h1><h2 id="2-1-创建-GitHub-仓库"><a href="#2-1-创建-GitHub-仓库" class="headerlink" title="2.1 创建 GitHub 仓库"></a>2.1 创建 GitHub 仓库</h2><h3 id="2-1-1-注册-GitHub-账号"><a href="#2-1-1-注册-GitHub-账号" class="headerlink" title="2.1.1 注册 GitHub 账号"></a>2.1.1 注册 GitHub 账号</h3><p>输入网址：<a href="https://github.com/%EF%BC%8C%E8%BF%9B%E5%85%A5%EF%BC%8C%E5%A6%82%E4%B8%8B%EF%BC%9A">https://github.com/，进入，如下：</a><br>![1.36 GitHub 注册](C:\Users\khi12\Desktop\初步搭建\1.36 GitHub 注册.png)</p><p>可以使用 QQ 邮箱，示例：<a href="mailto:&#x32;&#48;&#x32;&#x37;&#48;&#48;&#x34;&#x33;&#x32;&#54;&#x40;&#x71;&#x71;&#46;&#x63;&#x6f;&#109;">&#x32;&#48;&#x32;&#x37;&#48;&#48;&#x34;&#x33;&#x32;&#54;&#x40;&#x71;&#x71;&#46;&#x63;&#x6f;&#109;</a></p><p>进入下一个页面，如下：</p><p>![1.37 GitHub 注册](C:\Users\khi12\Desktop\初步搭建\1.37 GitHub 注册.png)</p><p>依次输入密码，用户名。点击 <code>Continue</code> 。如下：</p><p>注意：用户名与你的博客网址有很大关系。请认真填写。</p><p>![1.38 GitHub 注册](C:\Users\khi12\Desktop\初步搭建\1.38 GitHub 注册.png)</p><p>验证是否为真人，选取正确的图片验证码。点击 <code>Create account</code> ，如下：</p><p>![1.39 GitHub 注册](C:\Users\khi12\Desktop\初步搭建\1.39 GitHub 注册.jpeg)</p><p>登录邮箱，填写验证码，注册成功！如下：</p><p>![1.39 GitHub 注册](C:\Users\khi12\Desktop\初步搭建\1.40 GitHub 注册.png)</p><p>GitHub 界面如下：</p><p>![1.40 GitHub 注册](C:\Users\khi12\Desktop\初步搭建\1.41 GitHub 注册.png)</p><h3 id="2-1-2-创建仓库"><a href="#2-1-2-创建仓库" class="headerlink" title="2.1.2 创建仓库"></a>2.1.2 创建仓库</h3><p>![1.42 创建仓库](C:\Users\khi12\Desktop\初步搭建\1.42 创建仓库.png)</p><p>进入以下界面：</p><p>为了能通过GitHub用户名.github.io访问博客，仓库（repository） 应该直接命名为:<code>GitHub用户名.github.io</code></p><p><strong>eg</strong>：我的用户名：<strong>ziguanqing</strong>；仓库名：<strong>ziguanqing.github.io</strong></p><p>新仓库如下：</p><p>![1.43 创建仓库](C:\Users\khi12\Desktop\初步搭建\1.43 创建仓库.png)</p><p><font style="color:#ed1c24;font-weight:bolder;">注意</font>：2021.04.11 ，GitHub 新仓库分支命名为 <code>main</code> ，而 Hexo 默认用 <code>master</code> 分支。所以创建好后进入仓库，可以看下是什么分支，我的是 <code>main</code> 分支</p><h2 id="2-2-安装远程部署插件"><a href="#2-2-安装远程部署插件" class="headerlink" title="2.2 安装远程部署插件"></a>2.2 安装远程部署插件</h2><p>在 <code>Blog</code> 目录下，使用 Git 终端输入命令：</p><div class="code-wrapper"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span></code></pre></div><p>结果如下，则插件安装成功。</p><p>![1.44 安装插件](C:\Users\khi12\Desktop\初步搭建\1.44 安装插件.png)</p><p>然后打开 <code>Blog</code> 目录下的 <code>_config.yml</code> 文件，编辑（记事本、Sublime、VS code），补上以下内容：</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span>  <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>    <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:ziguanqing/ziguanqing.github.io.git</span>  <span class="hljs-comment"># repo: https://github.com/jinghu-moon/jinghu-moon.github.io.git</span>    <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span></code></pre></div><ul><li>type：git</li><li>repo：GitHub 仓库链接</li><li>branch：你仓库的默认分支，可能为：main、master</li></ul><p>![1.45 插件配置](C:\Users\khi12\Desktop\初步搭建\1.45 插件配置.png)</p><h2 id="2-3-Github-SSH-的配置"><a href="#2-3-Github-SSH-的配置" class="headerlink" title="2.3 Github SSH 的配置"></a>2.3 Github SSH 的配置</h2><h3 id="2-3-1-生成密钥"><a href="#2-3-1-生成密钥" class="headerlink" title="2.3.1 生成密钥"></a>2.3.1 生成密钥</h3><p>当我们频繁操作 GitHub 的时候，经常需要输入密码来验证，为了简化我们的 pull 过程，我们需要设置SSH Key 。</p><p>1、查看 Git 环境所有配置，输入以下命令：</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--list</span></code></pre></div><p>2、如果没有配置 <code>user.name</code> 和 <code>user.email</code> ，则需要先配置。</p><p>3、配置用户名，随意。</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.name</span> <span class="hljs-string">&quot;用户名&quot;</span><span class="hljs-comment"># 示例</span><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.name</span> <span class="hljs-string">&quot;ziguanqing&quot;</span></code></pre></div><p>4、配置邮箱，必须为 GitHub 邮箱。</p><div class="code-wrapper"><pre><code class="hljs yaml"><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.email</span>  <span class="hljs-string">&quot;123456@qq.com&quot;</span><span class="hljs-comment"># 示例</span><span class="hljs-string">git</span> <span class="hljs-string">config</span> <span class="hljs-string">--global</span> <span class="hljs-string">user.email</span>  <span class="hljs-string">&quot;2027004326@qq.com&quot;</span></code></pre></div><p>配置完，如下：</p><p>![1.46 ssh 配置](C:\Users\khi12\Desktop\初步搭建\1.46 ssh 配置.png)</p><p>5、进入 SSH Key 目录</p><div class="code-wrapper"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> ~<span class="hljs-string">/.ssh</span> <span class="hljs-keyword">ls</span></code></pre></div><p>![1.47 ssh 配置](C:\Users\khi12\Desktop\初步搭建\1.47 ssh 配置.png)</p><p>6、生成密钥</p><p>执行以下命令，生成公钥和私钥</p><div class="code-wrapper"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;github邮箱&quot;</span></code></pre></div><p>生成密钥，一共需要按四次 <code>enter</code> 键。</p><p>成功生成密钥，界面如下：</p><p>![1.48 ssh 配置](C:\Users\khi12\Desktop\初步搭建\1.48 ssh 配置.png)</p><p>7、查看 <code>.ssh</code> 目录下文件</p><p>输入以下命令：</p><div class="code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">ls</span></code></pre></div><p>![1.49 ssh 配置](C:\Users\khi12\Desktop\初步搭建\1.49 ssh 配置.png)</p><p>8、查看公钥并复制</p><p>输入以下命令：</p><div class="code-wrapper"><pre><code class="hljs matlab"><span class="hljs-built_in">cat</span> id_rsa.pub</code></pre></div><p>![1.50 ssh 配置](C:\Users\khi12\Desktop\初步搭建\1.50 ssh 配置.png)</p><h3 id="2-3-2-复制密钥到-Github"><a href="#2-3-2-复制密钥到-Github" class="headerlink" title="2.3.2 复制密钥到 Github"></a>2.3.2 复制密钥到 Github</h3><p>进入 Github 网站，点击 <code>setting -&gt; SSH and GPG keys -&gt; New SSH key</code> ，取个名字，粘贴密钥保存即可。</p><p>![1.51 ssh 配置](C:\Users\khi12\Desktop\初步搭建\1.51 ssh 配置.png)</p><h3 id="2-3-3-验证是否配置成功"><a href="#2-3-3-验证是否配置成功" class="headerlink" title="2.3.3 验证是否配置成功"></a>2.3.3 验证是否配置成功</h3><p>1、打开 Git bash ，输入以下命令。</p><div class="code-wrapper"><pre><code class="hljs angelscript">ssh -T <span class="hljs-symbol">git@</span>github.com</code></pre></div><p>显示 <code>successful</code> 表示配置成功！</p><p>![1.52 ssh 配置成功](C:\Users\khi12\Desktop\初步搭建\1.52 ssh 配置成功.png)</p><h3 id="2-3-4-GitHub-账户验证"><a href="#2-3-4-GitHub-账户验证" class="headerlink" title="2.3.4 GitHub 账户验证"></a>2.3.4 GitHub 账户验证</h3><p>在 <code>Blog</code> 文件目录下，打开 <code>Git Bash Here </code> 。输入以下命令：</p><div class="code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span></code></pre></div><p>如果遇到以下报错：![1.53 验证报错](C:\Users\khi12\Desktop\初步搭建\1.53 验证报错.png)</p><p>打开 <code>Blog</code> 目录下的 <code>_config.yml</code> 文件，编辑（记事本、Sublime、VS code），修改如下：</p><p>![1.54 验证报错，修改](C:\Users\khi12\Desktop\初步搭建\1.54 验证报错，修改.png)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hexo + Github 搭建博客1 — 预备知识</title>
    <link href="/posts/2335de7c/"/>
    <url>/posts/2335de7c/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/4a17b156/"/>
    <url>/posts/4a17b156/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo server</code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo generate</code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-wrapper"><pre><code class="hljs bash">$ hexo deploy</code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p><img src="https://gitee.com/jinghu-moon/imgbed/raw/master/images/1.1%20node.js%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%AE%98%E7%BD%91%EF%BC%89.png" alt="1.1 node.js下载（官网）"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/posts/d87f7e0c/"/>
    <url>/posts/d87f7e0c/</url>
    
    <content type="html"><![CDATA[<p><strong>你好，世界！</strong></p><p><strong>这是一个测试文档。</strong></p><p><strong><a href="https://halo.run/">3、Halo</a></strong></p><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>仰天长啸出门去，我辈岂是蓬蒿人。维尔体育</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p>仰天长啸出门去，我辈岂是蓬蒿人。</p><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p>仰天长啸出门去，我辈岂是蓬蒿人。</p><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><p>仰天长啸出门去，我辈岂是蓬蒿人。</p><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>仰天长啸出门去，我辈岂是蓬蒿人。</p><h2 id="《将进酒》"><a href="#《将进酒》" class="headerlink" title="《将进酒》"></a>《将进酒》</h2><h3 id="《蜀道难》"><a href="#《蜀道难》" class="headerlink" title="《蜀道难》"></a>《蜀道难》</h3><h4 id="《梦游天姥吟留别》"><a href="#《梦游天姥吟留别》" class="headerlink" title="《梦游天姥吟留别》"></a>《梦游天姥吟留别》</h4><h5 id="《望庐山瀑布》"><a href="#《望庐山瀑布》" class="headerlink" title="《望庐山瀑布》"></a>《望庐山瀑布》</h5><h6 id="《侠客行》"><a href="#《侠客行》" class="headerlink" title="《侠客行》"></a>《侠客行》</h6><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h2 id="二级标题-1"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><p>海<strong>客谈瀛</strong>洲，<u>烟涛微</u>茫信难求，<em>越人语</em>天姥，<del>云霞明</del>灭或可睹。天==姥连==天向天横，<code>势拔五岳</code>掩赤城。天台一万八千丈，对此欲倒东南倾。</p><p>我欲因之梦吴越，一夜飞渡镜湖月。湖月照我影，送我至剡溪。谢公宿外今尚在，渌水荡漾清猿啼。脚著谢公屐，身登青云梯。半壁见海日，空中闻天鸡。千岩万转路不定，迷花倚石忽已暝。熊咆龙吟殷岩泉，栗深林兮惊层巅。云青青兮欲雨，水澹澹兮生烟。列缺霹雳，丘峦崩摧，洞天石扉，訇然中开。青冥浩荡不见底，日月照耀金银台。霓为衣兮风为马，云之君兮纷纷而来下。虎鼓瑟兮鸾回车，仙之人兮列如麻。忽魂悸以魄动，怳惊起而长嗟。惟觉时之枕席，失向来之烟霞。</p><p>世间行乐亦如此，古来万事东流水。别君去兮何时还？且放白鹿青崖间，须行即骑访名山。安能摧眉折腰事权贵，使我不得开心颜！</p><h2 id="思源笔记"><a href="#思源笔记" class="headerlink" title="思源笔记"></a><a href="https://b3log.org/siyuan/">思源笔记</a></h2><p>abcdefghijklmnopqrstuvwxyz        ABCDEFGHIJKLMNOPQRSTUVWXYZ        1234567890</p><p>1、加粗：<strong>镜湖月</strong>        <strong>jinghu-moon</strong>        <strong>1234567890</strong></p><p>2、斜体：<em>镜湖月</em>        <em>jinghu-moon</em>        <em>1234567890</em></p><p>3、高亮：==镜湖月==        ==jinghu-moon==</p><p>4、删除线：~~~镜湖月~~</p><p>5、行内代码：<code>abcdefghijklmnopqrstuvwxyz</code>        <code>ABCDEFGHIJKLMNOPQRSTUVWXYZ</code></p><p>6、行间代码：</p><div class="code-wrapper"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hello，jinghu-moon！\n&quot;</span>);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;<span class="hljs-comment">// 这是一个测试文档！</span></code></pre></div><p>7、下划线：<u>镜湖月</u></p><p>8、链接：<a href="https://b3log.org/siyuan/">思源笔记 - 本地优先的个人知识管理系统，支持 Markdown 排版、块级引用和双向链接</a></p><p>9、表格：</p><table><thead><tr><th>镜湖月</th><th>镜湖月</th><th>镜湖月</th></tr></thead><tbody><tr><td>镜湖月</td><td>镜湖月</td><td>镜湖月</td></tr><tr><td>镜湖月</td><td>镜湖月</td><td>镜湖月</td></tr><tr><td>镜湖月</td><td>镜湖月</td><td>镜湖月</td></tr><tr><td><a href="https://b3log.org/siyuan/">思源笔记</a></td><td></td><td></td></tr></tbody></table><p>10、列表</p><ol><li>哈哈哈</li><li>哈哈哈<ol><li>哈哈哈<ol><li>哈哈哈</li></ol></li></ol></li><li>哈哈哈</li></ol><ul><li>哈哈哈</li><li>哈哈哈<ul><li>哈哈哈<ul><li>哈哈哈<ul><li>哈哈哈</li></ul></li></ul></li></ul></li></ul><p>11、引用</p><blockquote><p>仰天长啸出门去，我辈岂是蓬蒿人。</p></blockquote><p>12、图像</p><p><img src="https://gitee.com/jinghu-moon/imgbed/raw/master/images/splash.png" alt="splash"></p><p>13、脚注</p><p>使用 [^keyword] 表示注脚。</p><p><img src="https://gitee.com/jinghu-moon/imgbed/raw/master/images/image-20220104152952400.png"></p><p>[^keyword]: 这是脚注  <a href="https://b3log.org/siyuan/">思源笔记 - 本地优先的个人知识管理系统，支持 Markdown 排版、块级引用和双向链接 </a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>图片测试</title>
    <link href="/posts/b211d196/"/>
    <url>/posts/b211d196/</url>
    
    <content type="html"><![CDATA[<h2 id="1、ImgURL免费图床"><a href="#1、ImgURL免费图床" class="headerlink" title="1、ImgURL免费图床"></a>1、<a href="https://imgurl.org/">ImgURL免费图床</a></h2><p><img src="https://s3.bmp.ovh/imgs/2021/12/2f8905f2f32955e9.jpg" alt="123"></p><h2 id="2、老王图床"><a href="#2、老王图床" class="headerlink" title="2、老王图床"></a>2、<a href="https://img.gejiba.com/">老王图床</a></h2><p><img src="https://img.gejiba.com/images/d2ac6309f552d457ee49619e204d03e0.jpg" alt="d2ac6309f552d457ee49619e204d03e0.jpg"></p><h2 id="3、荟聚图床-不在更改"><a href="#3、荟聚图床-不在更改" class="headerlink" title="3、荟聚图床 - 不在更改"></a>3、<a href="https://www.imgurl.uk/">荟聚图床 - 不在更改</a></h2><p><img src="https://www.imgurl.uk/images/2021/12/04/1.jpg" alt="1.jpg"></p><h2 id="3、微博图床"><a href="#3、微博图床" class="headerlink" title="3、微博图床"></a>3、微博图床</h2><p><a href="https://github.com/Suxiaogang/WeiboPicBed">suxiaogang/WeiboPicBed: 新浪微博图床 Chrome扩展 (github.com)</a></p><p><img src="http://tva1.sinaimg.cn/large/006ToJRUgy1gx1mzuxjk6j31z4140b29.jpg" alt="1.jpg"></p><h2 id="4、gitee"><a href="#4、gitee" class="headerlink" title="4、gitee"></a>4、gitee</h2><p><img src="https://gitee.com/jinghu-moon/imgbed/raw/master/images/%E6%A0%87%E7%AD%BE.jpg"></p><h2 id="5、GitHub"><a href="#5、GitHub" class="headerlink" title="5、GitHub"></a>5、GitHub</h2><p><img src="https://raw.githubusercontent.com/jinghu-moon/hexo-bed/main/image/splash.png"></p><p><code>是是是</code></p><p><a href="README.md">Chinese Simplified</a></p>]]></content>
    
    
    <categories>
      
      <category>测试用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文章测试</tag>
      
      <tag>图床测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
